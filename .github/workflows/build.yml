name: Build and Package

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允許手動觸發

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas openpyxl
        pip install pytest pytest-cov  # 如果有測試
    
    - name: Run tests (if available)
      run: |
        # 如果有測試檔案就執行
        if [ -d "tests" ]; then
          pytest tests/ -v --cov=.
        fi
      shell: bash
      continue-on-error: true
    
    - name: Verify package
      run: |
        python -c "from adduct_matcher import AdductMatcher; print('Import successful!')"
    
    - name: Create distribution package
      run: |
        python -m pip install build
        python -m build
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        name: distribution-package
        path: dist/*
        retention-days: 30

  build-executable:
    name: Build Executable for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact-name: AdductMatcher-Windows
            output-name: AdductMatcher-Windows.exe
          - os: macos-latest
            artifact-name: AdductMatcher-macOS
            output-name: AdductMatcher-macOS
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas openpyxl pyinstaller
    
    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --name ${{ matrix.artifact-name }} adduct_matcher.py
    
    - name: Copy additional files
      run: |
        cp README.md dist/
        cp Adduct_Table.xlsx dist/
      shell: bash
    
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: |
          dist/${{ matrix.output-name }}
          dist/README.md
          dist/Adduct_Table.xlsx
        retention-days: 90

  package:
    name: Package for Release
    runs-on: ${{ matrix.os }}
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas openpyxl
    
    - name: Create release package
      run: |
        mkdir -p release
        cp adduct_matcher.py release/
        cp README.md release/
        cp Adduct_Table.xlsx release/
        # 可以添加更多檔案
    
    - name: Archive release package
      uses: actions/upload-artifact@v4
      with:
        name: adduct-matcher-${{ matrix.os }}
        path: release/
        retention-days: 90
    
    - name: Create ZIP for release
      run: |
        cd release
        zip -r ../adduct-matcher-${{ runner.os }}.zip .
      shell: bash
      if: runner.os != 'Windows'
    
    - name: Create ZIP for release (Windows)
      run: |
        cd release
        Compress-Archive -Path * -DestinationPath ../adduct-matcher-Windows.zip
      shell: pwsh
      if: runner.os == 'Windows'
    
    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-zip-${{ matrix.os }}
        path: adduct-matcher-*.zip
        retention-days: 90

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [package, build-executable]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Display structure
      run: ls -R artifacts/
    
    - name: Prepare executables
      run: |
        mkdir -p release-files
        # 複製 Windows 可執行檔
        if [ -f artifacts/AdductMatcher-Windows/AdductMatcher-Windows.exe ]; then
          cp artifacts/AdductMatcher-Windows/AdductMatcher-Windows.exe release-files/
        fi
        # 複製 macOS 可執行檔
        if [ -f artifacts/AdductMatcher-macOS/AdductMatcher-macOS ]; then
          cp artifacts/AdductMatcher-macOS/AdductMatcher-macOS release-files/
        fi
        # 複製 ZIP 檔案
        find artifacts/release-zip-* -name "*.zip" -exec cp {} release-files/ \;
      shell: bash
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: release-files/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
